// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: micro-extrator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainType int32

const (
	DomainType_CONSULTA DomainType = 0
	DomainType_EXAME    DomainType = 1
	DomainType_SUS      DomainType = 2
	DomainType_POLIMED  DomainType = 3
)

// Enum value maps for DomainType.
var (
	DomainType_name = map[int32]string{
		0: "CONSULTA",
		1: "EXAME",
		2: "SUS",
		3: "POLIMED",
	}
	DomainType_value = map[string]int32{
		"CONSULTA": 0,
		"EXAME":    1,
		"SUS":      2,
		"POLIMED":  3,
	}
)

func (x DomainType) Enum() *DomainType {
	p := new(DomainType)
	*p = x
	return p
}

func (x DomainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DomainType) Descriptor() protoreflect.EnumDescriptor {
	return file_micro_extrator_proto_enumTypes[0].Descriptor()
}

func (DomainType) Type() protoreflect.EnumType {
	return &file_micro_extrator_proto_enumTypes[0]
}

func (x DomainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DomainType.Descriptor instead.
func (DomainType) EnumDescriptor() ([]byte, []int) {
	return file_micro_extrator_proto_rawDescGZIP(), []int{0}
}

type ExtractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	DomainType    DomainType             `protobuf:"varint,2,opt,name=domain_type,json=domainType,proto3,enum=proto.DomainType" json:"domain_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractRequest) Reset() {
	*x = ExtractRequest{}
	mi := &file_micro_extrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractRequest) ProtoMessage() {}

func (x *ExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_extrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractRequest.ProtoReflect.Descriptor instead.
func (*ExtractRequest) Descriptor() ([]byte, []int) {
	return file_micro_extrator_proto_rawDescGZIP(), []int{0}
}

func (x *ExtractRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ExtractRequest) GetDomainType() DomainType {
	if x != nil {
		return x.DomainType
	}
	return DomainType_CONSULTA
}

type ExtractResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtractResponse) Reset() {
	*x = ExtractResponse{}
	mi := &file_micro_extrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractResponse) ProtoMessage() {}

func (x *ExtractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_extrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractResponse.ProtoReflect.Descriptor instead.
func (*ExtractResponse) Descriptor() ([]byte, []int) {
	return file_micro_extrator_proto_rawDescGZIP(), []int{1}
}

func (x *ExtractResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExtractResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_micro_extrator_proto protoreflect.FileDescriptor

const file_micro_extrator_proto_rawDesc = "" +
	"\n" +
	"\x14micro-extrator.proto\x12\x05proto\"a\n" +
	"\x0eExtractRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x122\n" +
	"\vdomain_type\x18\x02 \x01(\x0e2\x11.proto.DomainTypeR\n" +
	"domainType\"E\n" +
	"\x0fExtractResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*;\n" +
	"\n" +
	"DomainType\x12\f\n" +
	"\bCONSULTA\x10\x00\x12\t\n" +
	"\x05EXAME\x10\x01\x12\a\n" +
	"\x03SUS\x10\x02\x12\v\n" +
	"\aPOLIMED\x10\x032P\n" +
	"\x10ExtractorService\x12<\n" +
	"\vExtractData\x12\x15.proto.ExtractRequest\x1a\x16.proto.ExtractResponseB\vZ\tpkg/protob\x06proto3"

var (
	file_micro_extrator_proto_rawDescOnce sync.Once
	file_micro_extrator_proto_rawDescData []byte
)

func file_micro_extrator_proto_rawDescGZIP() []byte {
	file_micro_extrator_proto_rawDescOnce.Do(func() {
		file_micro_extrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_micro_extrator_proto_rawDesc), len(file_micro_extrator_proto_rawDesc)))
	})
	return file_micro_extrator_proto_rawDescData
}

var file_micro_extrator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_micro_extrator_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_micro_extrator_proto_goTypes = []any{
	(DomainType)(0),         // 0: proto.DomainType
	(*ExtractRequest)(nil),  // 1: proto.ExtractRequest
	(*ExtractResponse)(nil), // 2: proto.ExtractResponse
}
var file_micro_extrator_proto_depIdxs = []int32{
	0, // 0: proto.ExtractRequest.domain_type:type_name -> proto.DomainType
	1, // 1: proto.ExtractorService.ExtractData:input_type -> proto.ExtractRequest
	2, // 2: proto.ExtractorService.ExtractData:output_type -> proto.ExtractResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_micro_extrator_proto_init() }
func file_micro_extrator_proto_init() {
	if File_micro_extrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_micro_extrator_proto_rawDesc), len(file_micro_extrator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_micro_extrator_proto_goTypes,
		DependencyIndexes: file_micro_extrator_proto_depIdxs,
		EnumInfos:         file_micro_extrator_proto_enumTypes,
		MessageInfos:      file_micro_extrator_proto_msgTypes,
	}.Build()
	File_micro_extrator_proto = out.File
	file_micro_extrator_proto_goTypes = nil
	file_micro_extrator_proto_depIdxs = nil
}
